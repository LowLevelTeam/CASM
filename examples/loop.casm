; Loop examples for CASM
PROC 0x01                       ; CPU processor
ARCH 0x01, 0x03                 ; x86-64 architecture

; Code section
SECTION .text, 0x01 | 0x04

; For loop example
SYM for_loop_example
    SCOPEE
    ; Initialize loop variables
    VAR #1, TYPE_INT32, 0       ; Loop counter
    VAR #2, TYPE_INT32, 10      ; Loop limit
    VAR #3, TYPE_INT32, 0       ; Sum
    
    ; Loop body
loop_start:
    ; Check loop condition
    CMP #1, #2
    BR_GE loop_end
    
    ; Add counter to sum
    ADD #3, #3, #1
    
    ; Increment counter
    INC #1
    
    ; Jump back to start
    BR loop_start
    
loop_end:
    ; Return sum
    RET TYPE_ABICTL=ABICTL_RET=platform_default, #3
    SCOPEL

; While loop example
SYM while_loop_example
    SCOPEE
    ; Initialize variables
    VAR #1, TYPE_INT32, 100     ; Value
    VAR #2, TYPE_INT32, 0       ; Counter
    
    ; Loop body
while_start:
    ; Check loop condition
    CMP #1, 0
    BR_LE while_end
    
    ; Divide value by 2
    DIV #1, #1, 2
    
    ; Increment counter
    INC #2
    
    ; Jump back to start
    BR while_start
    
while_end:
    ; Return counter (number of divisions)
    RET TYPE_ABICTL=ABICTL_RET=platform_default, #2
    SCOPEL

; Do-while loop example
SYM do_while_example
    SCOPEE
    ; Initialize variables
    VAR #1, TYPE_INT32, 1       ; Value
    VAR #2, TYPE_INT32, 1       ; Previous value
    VAR #3, TYPE_INT32, 0       ; Temp
    VAR #4, TYPE_INT32, 0       ; Counter
    
    ; Loop body
do_while_start:
    ; Increment counter
    INC #4
    
    ; Calculate next Fibonacci number
    MOV #3, #1                  ; temp = value
    ADD #1, #1, #2              ; value = value + prev
    MOV #2, #3                  ; prev = temp
    
    ; Check limit (10 iterations)
    CMP #4, 10
    BR_LT do_while_start
    
    ; Return final Fibonacci number
    RET TYPE_ABICTL=ABICTL_RET=platform_default, #1
    SCOPEL

; Main function
SYM main, TYPE_PARAM0=GLOB
    SCOPEE
    ; Call for loop example
    CALL for_loop_example
    VAR #1, TYPE_INT32
    MOV #1, TYPE_ABICTL=ABICTL_RET=platform_default
    
    ; Call while loop example
    CALL while_loop_example
    VAR #2, TYPE_INT32
    MOV #2, TYPE_ABICTL=ABICTL_RET=platform_default
    
    ; Call do-while loop example
    CALL do_while_example
    VAR #3, TYPE_INT32
    MOV #3, TYPE_ABICTL=ABICTL_RET=platform_default
    
    ; Return sum of results
    VAR #4, TYPE_INT32
    ADD #4, #1, #2
    ADD #4, #4, #3
    
    RET TYPE_ABICTL=ABICTL_RET=platform_default, #4
    SCOPEL